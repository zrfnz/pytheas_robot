<?xml version="1.0"?>
<robot name="home_robot" xmlns:xacro="http://ros.org/wiki/xacro">
<xacro:macro name ="home_robot_platform">
 <!-- Robot dimensions --> 
  <xacro:property name="base_length" value="0.53" />
  <xacro:property name="base_width" value="0.56" />
  <xacro:property name="base_height" value="0.07" />
  <xacro:property name="wheel_diam" value="0.04" />
  <xacro:property name="wheel_width" value="0.03" />
  <xacro:property name="platform1_elevation" value="0.83" />
  <xacro:property name="platform2_elevation" value="1.0" />
  <xacro:property name="column_diam" value="0.04" />
  <xacro:property name="platform1_length" value="0.35" />
  <xacro:property name="platform1_width" value="0.40" />
  <xacro:property name="platform2_length" value="0.3" />
  <xacro:property name="platform2_width" value="0.35" />
  <xacro:property name="platform_height" value="0.02" />
  <xacro:property name="platform1_elevation" value="0.71" />
  <xacro:property name="platform2_elevation" value="0.87" />
  <xacro:property name="pi" value="3.1415926535897931" />

<!-- Macro to define wheels at back  -->
  <xacro:macro name="wheel_back" params="suffix reflect">

  <joint name="wheel_back_${suffix}_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_back_${suffix}_link"/>
    <axis xyz="0 0 1"/>
    <origin xyz="${-base_length/2} ${-base_width/2*reflect} ${wheel_diam/2 - base_height}" rpy="${-pi/2} 0 0"/>
  </joint>

  <link name="wheel_back_${suffix}_link">
    <visual>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_diam/2}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="dark"/>
    </visual>
 
   <collision>
<!--   
   <origin xyz="-0.064 0 0.047" rpy="0 0 0"/>
 -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_diam/2}"/>
      </geometry>
    </collision>

    <inertial>
 <!-- Center of mass origin -->
    <origin xyz="0 0 0"/>

      <mass value="3.4"/>
      <inertia ixx="0.0067" ixy="-0" ixz="0"
               iyy="0.0123" iyz="0"
               izz="0.0067" />
    </inertial>

  </link>

  </xacro:macro>

<!-- Macro to define wheels at front  -->
  <xacro:macro name="wheel_front" params="suffix reflect">

  <joint name="wheel_front_${suffix}_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_front_${suffix}_link"/>
    <axis xyz="0 0 1"/>
    <origin xyz="${base_length/2} ${-base_width/2*reflect} ${wheel_diam/2 - base_height}" rpy="${-pi/2} 0 0"/>
  </joint>

  <link name="wheel_front_${suffix}_link">
    <visual>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_diam/2}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="dark"/>
    </visual>
 
   <collision>
<!--   
   <origin xyz="-0.064 0 0.047" rpy="0 0 0"/>
 -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_diam/2}"/>
      </geometry>
    </collision>

    <inertial>
 <!-- Center of mass origin -->
    <origin xyz="0 0 0"/>

      <mass value="3.4"/>
      <inertia ixx="0.0067" ixy="-0" ixz="0"
               iyy="0.0123" iyz="0"
               izz="0.0067" />
    </inertial>

  </link>

  </xacro:macro>

<!-- Platforms column macro -->
  <joint name="platform_column_joint" type="fixed">
    <parent link="base_link"/>
    <child link="platform_column_link"/>
    <origin xyz="0.07 0 0.22"/>
  </joint>
 <link name="platform_column_link">
    <visual>
      <geometry>
          <cylinder length="${(platform2_elevation/2)+0.02}" radius="${column_diam/2}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="dark"/>
    </visual>
   <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${platform2_elevation-base_height}" radius="${column_diam}"/>
      </geometry>
   </collision>
   <inertial>

    <origin xyz="0 0 0" rpy="0 0 0"/>

      <mass value="1.25"/>
      <inertia ixx="0.045453" ixy="0" ixz="0"
               iyy="0.049627" iyz="0"
               izz="0.004174" />
    </inertial>

  </link>>
 
<!-- Platform dimensions -->
    <link name="base_link">
    <visual>
      <origin xyz="0 0 0"/>
      <geometry>
          <box size ="${base_length} ${base_width} ${base_height/2}"/>
      </geometry>
      <material name="light_black" />
    </visual>
   <collision>
      <origin xyz="0 0 0"/>
      <geometry>
        <box size ="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

</link>

<!-- Upper platform -->
<joint name="platform2_joint" type="fixed">
	<parent link="base_link"/>
	<child link="platform2_link"/>
        <origin xyz="${base_length/2-platform2_width/2} 0 ${(base_height + platform2_elevation)/2}"/>
</joint>

    <link name="platform2_link">
    <visual>
	<origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size ="${platform2_length} ${platform2_width} ${platform_height}"/>
      </geometry>
      <material name="light_black" />
    </visual>
   <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size ="${platform2_length} ${platform2_width} ${platform_height}"/>
      </geometry>
    </collision>

    <inertial>
 
    <origin xyz="0 0 0" rpy="0 0 0"/>

      <mass value="3.12"/>
      <inertia ixx="0.065" ixy="0" ixz="0"
               iyy="0.0816" iyz="0"
               izz="0.147" />
    </inertial>  

</link>

<!-- Lower platform -->
<joint name="platform1_joint" type="fixed">
	<parent link="base_link"/>
	<child link="platform1_link"/>
        <origin xyz="${base_length/2} 0 ${(base_height + platform1_elevation)/2}"/>
</joint>

    <link name="platform1_link">
    <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size ="${platform1_length} ${platform1_width} ${platform_height}"/>
      </geometry>
      <material name="light_black" />
    </visual>
   <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size ="${platform1_length} ${platform1_width} ${platform_height}"/>
      </geometry>
    </collision>

    <inertial>
 
    <origin xyz="0 0 0" rpy="0 0 0"/>

      <mass value="2.52"/>
      <inertia ixx="0.065" ixy="0" ixz="0"
               iyy="0.0816" iyz="0"
               izz="0.147" />
    </inertial>  

</link>

<!-- Sensors -->

<xacro:sensor_t265 parent="base_link" name="rs_t265" topics_ns="rs_t265">
    <origin xyz="${(base_length/2)+0.19} 0 ${((base_height + platform1_elevation)/2)}" rpy="0 0 0" />
</xacro:sensor_t265>

<xacro:VLP-16 parent="base_link" name="velodyne" topic="/velodyne_points2" organize_cloud="false" hz="10" samples="440" gpu="true">
    <origin xyz="${(base_length/2)+0.1} 0 ${((base_height + platform1_elevation)/2)+0.01}" rpy="0 0 0" />
</xacro:VLP-16>

<!-- Wheels -->
 <xacro:wheel_back suffix="left" reflect ="1"/>
 <xacro:wheel_back suffix="right" reflect ="-1"/>
 <xacro:wheel_front suffix="left" reflect="1"/>
 <xacro:wheel_front suffix="right" reflect="-1"/>

</xacro:macro>

<xacro:macro name="VLP-16" params="*origin parent:=base_link name:=velodyne topic:=/velodyne_points organize_cloud:=false hz:=10 lasers:=16 samples:=1875 collision_range:=0.3 min_range:=0.9 max_range:=130.0 noise:=0.008 min_angle:=-${pi} max_angle:=${pi} gpu:=false">

    <joint name="${name}_base_mount_joint" type="fixed">
      <xacro:insert_block name="origin" /> 
      <parent link="${parent}"/>
      <child link="${name}_base_link"/>
    </joint>

    <link name="${name}_base_link">
      <inertial>
        <mass value="0.83"/>
        <origin xyz="0 0 0.03585"/>
        <inertia ixx="${(0.83 * (3.0*0.0516*0.0516 + 0.0717*0.0717)) / 12.0}" ixy="0" ixz="0"
          iyy="${(0.83 * (3.0*0.0516*0.0516 + 0.0717*0.0717)) / 12.0}" iyz="0"
          izz="${0.5 * 0.83 * (0.0516*0.0516)}"/>
      </inertial>
      <visual>
        <geometry>
            <mesh filename="package://robot_description/meshes/sensors/VLP16_base_1.dae" />
        </geometry>
      </visual>
      <visual>
        <geometry>
            <mesh filename="package://robot_description/meshes/sensors/VLP16_base_2.dae" />
        </geometry>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0.03585"/>
        <geometry>
          <cylinder radius="0.0516" length="0.0717"/>
        </geometry>
      </collision>
    </link>

    <joint name="${name}_base_scan_joint" type="fixed" >
        <origin xyz="0 0 0.0377" rpy="0 0 0" />
      <parent link="${name}_base_link" />
      <child link="${name}"/>
    </joint>

    <link name="${name}">
      <inertial>
        <mass value="0.01"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="1e-7" ixy="0" ixz="0" iyy="1e-7" iyz="0" izz="1e-7"/>
      </inertial>
      <visual>
        <origin xyz="0 0 -0.0377" />
        <geometry>
            <mesh filename="package://robot_description/meshes/sensors/VLP16_scan.dae" />
        </geometry>
      </visual>
    </link>

    <!-- Gazebo requires the velodyne_gazebo_plugins package -->
    <gazebo reference="${name}">
      <xacro:if value="${gpu}">
        <sensor type="gpu_ray" name="${name}-VLP16">
          <pose>0 0 0 0 0 0</pose>
          <visualize>false</visualize>
          <update_rate>${hz}</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>${samples}</samples>
                <resolution>1</resolution>
                <min_angle>${min_angle}</min_angle>
                <max_angle>${max_angle}</max_angle>
              </horizontal>
              <vertical>
                <samples>${lasers}</samples>
                <resolution>1</resolution>
                <min_angle>-${15.0*pi/180.0}</min_angle>
                <max_angle> ${15.0*pi/180.0}</max_angle>
              </vertical>
            </scan>
            <range>
              <min>${collision_range}</min>
              <max>${max_range+1}</max>
              <resolution>0.001</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </ray>
          <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_gpu_laser.so">
            <topicName>${topic}</topicName>
            <frameName>${name}</frameName>
            <organize_cloud>${organize_cloud}</organize_cloud>
            <min_range>${min_range}</min_range>
            <max_range>${max_range}</max_range>
            <gaussianNoise>${noise}</gaussianNoise>
          </plugin>
        </sensor>
      </xacro:if>
      <xacro:unless value="${gpu}">
        <sensor type="ray" name="${name}-VLP16">
          <pose>0 0 0 0 0 0</pose>
          <visualize>false</visualize>
          <update_rate>${hz}</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>${samples}</samples>
                <resolution>1</resolution>
                <min_angle>${min_angle}</min_angle>
                <max_angle>${max_angle}</max_angle>
              </horizontal>
              <vertical>
                <samples>${lasers}</samples>
                <resolution>1</resolution>
                <min_angle>-${15.0*pi/180.0}</min_angle>
                <max_angle> ${15.0*pi/180.0}</max_angle>
              </vertical>
            </scan>
            <range>
              <min>${collision_range}</min>
              <max>${max_range+1}</max>
              <resolution>0.001</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </ray>
          <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
            <topicName>${topic}</topicName>
            <frameName>${name}</frameName>
            <organize_cloud>${organize_cloud}</organize_cloud>
            <min_range>${min_range}</min_range>
            <max_range>${max_range}</max_range>
            <gaussianNoise>${noise}</gaussianNoise>
          </plugin>
        </sensor>
      </xacro:unless>
  </gazebo>

  </xacro:macro>
<xacro:macro name="sensor_t265" params="parent name:=camera topics_ns:=camera *origin">

    <!-- The following values are approximate, and the camera node
     publishing TF values with actual calibrated camera extrinsic values -->
    <xacro:property name="fisheye1_offset_x" value="-0.0411"/>
    <xacro:property name="fisheye1_offset_y" value="0.0"/>
    <xacro:property name="fisheye1_offset_z" value="0.0"/>

    <xacro:property name="fisheye2_offset_x" value="0.0229"/>
    <xacro:property name="fisheye2_offset_y" value="0.0"/>
    <xacro:property name="fisheye2_offset_z" value="0.0"/>

    <material name="${name}_aluminum">
      <color rgba="0.5 0.5 0.5 1"/>
    </material>

    <!-- camera body, with origin at camera_link -->
    <joint name="${name}_pose_frame_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}"/>
      <child link="${name}_pose_frame" />
    </joint>
    <link name="${name}_pose_frame"/>

    <joint name="${name}_pose_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${-pi/2}"/>
      <parent link="${name}_pose_frame"/>
      <child link="${name}_link" />
    </joint>

    <link name="${name}_link">
      <visual>
          <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <mesh filename="package://robot_description/meshes/sensors/t265.stl" />
        </geometry>
        <material name="${name}_aluminum"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://robot_description/meshes/sensors/t265.stl" />
        </geometry>
      </collision>
      <inertial>
        <!-- The following are not reliable values, and should not be used for modeling -->
        <mass value="0.068024" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.0000039782" ixy="0.0" ixz="0.000000034641" iyy="0.000065045" iyz="0.0" izz="0.000067499" />
      </inertial>
    </link>

    <joint name="${name}_fisheye1_rgb_joint" type="fixed">
      <origin xyz="${fisheye1_offset_x} ${fisheye1_offset_y} ${fisheye1_offset_z}" rpy="0 ${pi/2} ${pi/2}"/>
      <parent link="${name}_link"/>
      <child link="${name}_fisheye1_rgb_frame" />
    </joint>
    <link name="${name}_fisheye1_rgb_frame"/>

    <joint name="${name}_fisheye2_rgb_joint" type="fixed">
      <origin xyz="${fisheye2_offset_x} ${fisheye2_offset_y} ${fisheye2_offset_z}" rpy="0 ${pi/2} ${pi/2}"/>
      <parent link="${name}_link"/>
      <child link="${name}_fisheye2_rgb_frame" />
    </joint>
    <link name="${name}_fisheye2_rgb_frame"/>

    <joint name="${name}_fisheye1_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="-${pi/2} 0 -${pi/2}"/>
      <parent link="${name}_fisheye1_rgb_frame"/>
      <child link="${name}_fisheye1_optical_frame" />
    </joint>
    <link name="${name}_fisheye1_optical_frame"/>

    <joint name="${name}_fisheye2_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="-${pi/2} 0 -${pi/2}"/>
      <parent link="${name}_fisheye2_rgb_frame"/>
      <child link="${name}_fisheye2_optical_frame" />
    </joint>
    <link name="${name}_fisheye2_optical_frame"/>


    <!-- camera depth joints and links -->
    <joint name="${name}_gyro_optical_joint" type="fixed">
      <origin xyz="-0.0311 0 0.00655" rpy="0 ${pi} 0"/>
      <parent link="${name}_link"/>
      <child link="${name}_gyro_optical_frame" />
    </joint>
    <link name="${name}_gyro_optical_frame"/>


    <joint name="${name}_accel_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="${name}_gyro_optical_frame"/>
      <child link="${name}_accel_optical_frame" />
    </joint>
    <link name="${name}_accel_optical_frame"/>


</xacro:macro>

<xacro:home_robot_platform />
</robot>
